---
title: "Organize Data Notebook"
---

```{r}
#| label: setup
#| include: false
library(here)
source(here("utils","check_packages.R"))
source(here("utils","functions.R"))
```

This quarto doc is used to organize the data.

#read in datasets
```{r}
public_schools <- read_csv(here("data","data_raw","ELSI_csv_export_6385268754878729684376.csv"),
                           skip = 6, n_max = 100455, na=c("–","†","‡"))

private_schools <- read_csv(here("data", "data_raw", "ELSI_csv_export_6385268708394117671648.csv"), 
                            skip = 6, n_max = 21099, na=c("–","†","‡"))

acs_2019 <- read_csv(here("data", "data_raw", "R13686816_SL050.csv"))
```

#selecting variables
```{r}
private_2019 <- subset(private_schools,
  select = c("Private School Name", "State Name [Private School] Latest available year",
             "School ID - NCES Assigned [Private School] Latest available year", 
             "County Name [Private School] 2019-20","ANSI/FIPS County Code [Private School] 2019-20", 
             "ANSI/FIPS State Code [Private School] Latest available year", "Total Students (Ungraded & K-12) [Private School] 2019-20", "American Indian/Alaska Native Students [Private School] 2019-20",
"Asian or Asian/Pacific Islander Students [Private School] 2019-20", "Hispanic Students [Private School] 2019-20", "Black or African American Students [Private School] 2019-20", "White Students [Private School] 2019-20", "Nat. Hawaiian or Other Pacific Isl. Students [Private School] 2019-20", 
   "Two or More Races Students [Private School] 2019-20")) 
  
public_2019 <- subset(public_schools, 
                      select = c("School Name [Public School] 2019-20", 
    "State Name [Public School] Latest available year",
        "School ID - NCES Assigned [Public School] Latest available year", 
         "County Name [Public School] 2019-20", 
         "County Number [Public School] 2019-20", 
        "ANSI/FIPS State Code [Public School] Latest available year", 
        "Charter School [Public School] 2019-20", 
         "Magnet School [Public School] 2019-20", 
         "Total Students All Grades (Excludes AE) [Public School] 2019-20",
        "American Indian/Alaska Native Students [Public School] 2019-20",
         "Asian or Asian/Pacific Islander Students [Public School] 2019-20",
        "Hispanic Students [Public School] 2019-20", 
      "Black or African American Students [Public School] 2019-20", 
"White Students [Public School] 2019-20", 
         "Nat. Hawaiian or Other Pacific Isl. Students [Public School] 2019-20", 
         "Two or More Races Students [Public School] 2019-20"))

acs_county <- subset(acs_2019,
                     select = c("Geo_NAME", "Geo_FIPS", "SE_A14006_001", 
                                "SE_A12002_001", "SE_A12002_002", "SE_A12002_003",
                                "SE_A12002_004", "SE_A12002_005", "SE_A12002_006", 
                                "SE_A12002_007", "SE_A12002_008", "SE_A00002_001",
                                "SE_A00002_002", "SE_A00002_003"))
```


#renaming variables
```{r}
private_2019 <- private_2019 |>
  rename(state = `State Name [Private School] Latest available year`,
         school_id = `School ID - NCES Assigned [Private School] Latest available year`,
         county_name = `County Name [Private School] 2019-20`,
         county_code = `ANSI/FIPS County Code [Private School] 2019-20`,
         state_code = `ANSI/FIPS State Code [Private School] Latest available year`,
         total_students = `Total Students (Ungraded & K-12) [Private School] 2019-20`,
         AIAN = `American Indian/Alaska Native Students [Private School] 2019-20`,
         Asian = `Asian or Asian/Pacific Islander Students [Private School] 2019-20`,
         Hispanic = `Hispanic Students [Private School] 2019-20`, 
         Black = `Black or African American Students [Private School] 2019-20`, 
         White = `White Students [Private School] 2019-20`, 
         Hawaiian = `Nat. Hawaiian or Other Pacific Isl. Students [Private School] 2019-20`, 
         Multiracial = `Two or More Races Students [Private School] 2019-20`) 

  private_2019 <- private_2019 |>
    mutate(county_code = as.numeric(county_code))

public_2019 <- public_2019 |>
  rename(school_name = `School Name [Public School] 2019-20`, 
         state = `State Name [Public School] Latest available year`,
         school_id = `School ID - NCES Assigned [Public School] Latest available year`, 
         county_name = `County Name [Public School] 2019-20`, 
         county_code = `County Number [Public School] 2019-20`, 
         state_code = `ANSI/FIPS State Code [Public School] Latest available year`, 
         charter_school = `Charter School [Public School] 2019-20`, 
         magnet_school = `Magnet School [Public School] 2019-20`, 
         total_students = `Total Students All Grades (Excludes AE) [Public School] 2019-20`,
         AIAN = `American Indian/Alaska Native Students [Public School] 2019-20`,
         Asian = `Asian or Asian/Pacific Islander Students [Public School] 2019-20`,
         Hispanic = `Hispanic Students [Public School] 2019-20`, 
         Black = `Black or African American Students [Public School] 2019-20`, 
         White = `White Students [Public School] 2019-20`, 
         Hawaiian = `Nat. Hawaiian or Other Pacific Isl. Students [Public School] 2019-20`, 
         Multiracial = `Two or More Races Students [Public School] 2019-20`)

public_2019 <- public_2019 |>
    mutate(county_code = as.numeric(county_code))

acs_county <- acs_county |>
  rename(county_name = 'Geo_NAME', 
         county_code ='Geo_FIPS', 
         median_household_income = 'SE_A14006_001', 
         pop_25 = 'SE_A12002_001', 
         less_than_HS = 'SE_A12002_002', 
         HS = 'SE_A12002_003',
         some_college = 'SE_A12002_004', 
         BD = 'SE_A12002_005', 
         MD = 'SE_A12002_006', 
         prof_SD = 'SE_A12002_007', 
         doctorate = 'SE_A12002_008', 
         total_pop = 'SE_A00002_001', pop_density = 'SE_A00002_002', 
         land_area = 'SE_A00002_003')

acs_county <- acs_county |>
  mutate(county_code = as.numeric(county_code))
``` 



#subset data by county
```{r}

private_county <- private_2019 |>
  group_by(county_code) |>
  summarize(n_private = n())

public_county <- public_2019 |>
  mutate(NonWhite = AIAN+Asian+Hispanic+Black+Hawaiian+Multiracial) |>
  select(county_code, White, NonWhite) |>
  drop_na() |>
  group_by(county_code) |>
  arrange(county_code)



```



#calculate dissimilarity index
```{r}

calc_dissimilarity <- function(county) {
  a <- county$White/sum(county$White)
  b <- county$NonWhite/sum(county$NonWhite)
  dissim <- 50 * sum(abs(a-b))
  return(tibble(county_code = unique(county$county_code),
                dissim = dissim,
                n_schools = nrow(county)))
}

public_county |>
  filter(county_code == "1001") |>
  calc_dissimilarity()

public_county |>
  filter(county_code == "1021") |>
  calc_dissimilarity()

public_dissim <- public_county |>
  group_by(county_code) |>
  group_split() |>
  map(calc_dissimilarity) |>
  bind_rows()

```


#merge datasets
```{r}

school_dissim <- left_join(public_dissim, private_county, by=c("county_code"))

school_dissim <- school_dissim |>
  filter(n_schools >= 10) |>
  mutate(n_private = ifelse(is.na(n_private), 0, n_private)) |>
  drop_na()

school_dissim <- left_join(school_dissim, acs_county, by=c("county_code"))
```


#models and graphs


```{r}
#| label: fig-1
#| fig-cap: Relationship Between the number of Private Schools and Public School Dissimilarity 

ggplot(school_dissim, aes(x=n_private, y=dissim))+
  geom_point()+
  geom_smooth(se = FALSE)+
  labs(x = "number of private schools", y = "public school dissimilarity", subtitle = "priavte schools and racial dissimilarity")+
  theme_bw()
```


```{r}
#| label: fig-2
#| fig-cap: Private schools and Racial Dissimilarity - residual vs. fitted values

model <- lm(dissim~n_private, data = school_dissim)
augment(model)

ggplot(augment(model), aes(x = .fitted, y = .resid))+
  geom_point()+
  geom_hline(yintercept = 0, linetype = 2)+
  geom_smooth(se = FALSE)+
  labs(x = "dissimilarity fitted values", y = "model residuals")+
  theme_bw()
```




#fix the non-lineararity 
```{r}
#| label: fig-3
#| fig-cap: log transformation

ggplot(school_dissim, aes(x = n_private, y = dissim))+
  geom_jitter(alpha = 0.5)+
  geom_smooth(method = "lm", color = "red", se = FALSE)+
  scale_x_log10()+
  scale_y_log10()+
  labs(x = "number of private schools", y = "public school dissimilarity")+
  theme_bw()
```


```{r}
#| label: tbl-reg
#| tbl-cap: Relationship between number of private schools and public school racial dissimilarity by County
#| results: asis

model1 <- lm(dissim~n_private+median_household_income, data=school_dissim)
 
model2 <- lm(dissim~n_private+median_household_income+total_pop, data=school_dissim)
 
model3 <- lm(dissim~n_private+median_household_income+total_pop+pop_density, data=school_dissim)


screenreg(list(model1, model2, model3),
       digits = 3,
       caption.above=TRUE, 
       include.rsquared=TRUE,
       include.adjrs=FALSE,
       include.nobs=TRUE,
       include.rmse=FALSE)

```

